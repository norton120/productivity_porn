version: 0.2

phases:
  install:
    runtime-versions:
      docker: 19
  pre_build:
    commands:
      - REGION=us-west-2
      - REPOSITORY_URI=093699967222.dkr.ecr.$REGION.amazonaws.com/productivity-porn
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      - mkdir -vp ~/.docker/cli-plugins/
      - echo "installing buildx to fix platform-specific images..."
      - export BUILDX_VERSION=$(curl --silent "https://api.github.com/repos/docker/buildx/releases/latest" |jq -r .tag_name)
      - curl -JLO "https://github.com/docker/buildx/releases/download/$BUILDX_VERSION/buildx-$BUILDX_VERSION.linux-amd64"
      - mkdir -p ~/.docker/cli-plugins
      - mv "buildx-$BUILDX_VERSION.linux-amd64" ~/.docker/cli-plugins/docker-buildx
      - chmod +x ~/.docker/cli-plugins/docker-buildx
      - docker run --privileged --rm tonistiigi/binfmt --install amd64
      - echo "Buildx installed with amd64 support."
      - echo "Logging into Amazon ECR..."
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin 322534677985.dkr.ecr.$REGION.amazonaws.com
      - echo "Login successful."
  build:
    commands:
      - echo Building the Docker image...
      - cd ingester
      - docker buildx build --platform linux/amd64 -t $REPOSITORY_URI:$IMAGE_TAG .
      - docker tag $REPOSITORY_URI:$IMAGE_TAG $REPOSITORY_URI:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image to ECR...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - docker push $REPOSITORY_URI:latest
      - echo Writing image definitions file...
      - printf '[{"name":"ingester","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
  files:
    - imagedefinitions.json
